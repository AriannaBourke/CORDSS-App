{"version":3,"sources":["./src/app/tab3/medical-history/add-entry/add-entry.module.ts","./src/app/tab3/medical-history/add-entry/add-entry.page.scss","./src/app/tab3/medical-history/add-entry/add-entry.page.html","./src/app/tab3/medical-history/add-entry/add-entry.page.ts","./src/app/tab3/medical-history/add-entry/add-entry-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AAEA;AAE0B;AAEvB;IAWnC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,mFAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,4DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACnB/B;AAAe,sGAAuC,iBAAiB,uBAAuB,GAAG,6CAA6C,2WAA2W,E;;;;;;;;;;;;ACAzf;AAAe,6wCAA8sC,wCAAwC,o/CAAo/C,wCAAwC,+qEAA+qE,wCAAwC,uyLAAuyL,wCAAwC,m9DAAm9D,wCAAwC,+6DAA+6D,wCAAwC,kwKAAkwK,E;;;;;;;;;;;;ACA3hoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA8B;AAC9B,8DAA8D;AAC9D,4EAA4E;AAC5E,+GAA+G;AAC/G,gDAAgD;AAChD,iFAAiF;;;;AAE/B;AACU;AACD;AACK;IAQnD,YAAY,SAAZ,YAAY;IASvB,YAAoB,eAAgC,EAChC,SAAoB,EACpB,gBAAiC,EAClC,KAAe,EACf,IAAY;QAJX,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,qBAAgB,GAAhB,gBAAgB,CAAiB;QAClC,UAAK,GAAL,KAAK,CAAU;QACf,SAAI,GAAJ,IAAI,CAAQ;QAZxB,mBAAc,GAAgB,EAAE,CAAC;QACjC,WAAM,GAA6B,KAAK,CAAC;QACzC,eAAU,GAAyB,IAAI,CAAC;QAG/C,gBAAW,GAAG,KAAK,CAAC;QACpB,wBAAmB,GAAY,8JAA8J;QAS7L,IAAI,CAAC,IAAI,GAAG,EAAC,SAAS,EAAE,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;QAClF,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK;aACT,KAAK,EAAE;aACP,IAAI,CAAC,GAAG,EAAE;YAGP,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAEM,eAAe;QAEpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACf,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,SAAS;SACpB,CAAC;aACD,IAAI,CAAC,CAAC,EAAgB,EAAE,EAAE;YAEzB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAEK,qBAAqB;;YACzB,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,EAAE;QAChB,CAAC;KAAA;IAED,cAAc;QACR,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,kDAAkD,EAAO,EAAE,CAAC;aAC/E,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oBACvB,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;oBAC5B,SAAS,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;oBACpC,iBAAiB,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB;oBACpD,cAAc,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;oBAC9C,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;iBAC7B,CAAC;aACH;QACH,CAAC,CAAC;aACG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEF,QAAQ;QACb,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,iDAAiD,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpK,IAAI,CAAC,GAAG,CAAC,EAAE;YACR,IAAI,CAAC,UAAU,EAAE;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEK,UAAU,CAAC,MAAc;;YAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;gBAC/C,MAAM,EAAE,kBAAkB;gBAC1B,OAAO,EAAE,oCAAoC;gBAC7C,OAAO,EAAE;oBACP;wBACE,IAAI,EAAC,QAAQ;qBACd;oBACD;wBACE,IAAI,EAAC,MAAM;wBACX,OAAO,EAAE,GAAE,EAAE;4BACX,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAElB,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED,QAAQ,CAAC,CAAC;QACR,CAAC,CAAC,cAAc,EAAE,CAAC;IACrB,CAAC;IAEG,UAAU;;YACd,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KAAA;CACF;;YAxHQ,8DAAe;YAAE,wDAAS;YAC1B,8DAAe;YAAE,uDAAQ;YACzB,+DAAM;;AAQF,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,iFAAoC;;KAErC,CAAC;GACW,YAAY,CA8GxB;AA9GwB;;;;;;;;;;;;;;;;;;;;AClBgB;AACc;AAEP;AAEhD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH","file":"default~add-entry-add-entry-module~medical-history-medical-history-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddEntryPageRoutingModule } from './add-entry-routing.module';\r\n\r\nimport { AddEntryPage } from './add-entry.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddEntryPageRoutingModule\r\n  ],\r\n  declarations: [AddEntryPage]\r\n})\r\nexport class AddEntryPageModule {}\r\n","export default \"::ng-deep .mycomponent-wider-popover {\\n  --width: 95%;\\n  --max-width: 400px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcYWRkLWVudHJ5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtBQUNGIiwiZmlsZSI6ImFkZC1lbnRyeS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLm15Y29tcG9uZW50LXdpZGVyLXBvcG92ZXIge1xyXG4gIC0td2lkdGg6IDk1JTtcclxuICAtLW1heC13aWR0aDogNDAwcHg7XHJcbn1cclxuIl19 */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Add a Condition!</ion-title>\\r\\n    <ion-button\\r\\n      color=\\\"dark\\\"\\r\\n      fill=\\\"clear\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      size=\\\"small\\\"\\r\\n      (click)=\\\"closeModal()\\\"\\r\\n      ><ion-icon size=\\\"large\\\" name=\\\"arrow-back-outline\\\"></ion-icon\\r\\n    ></ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"submitData(form)\\\">\\r\\n    <ion-card>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-card-title>Add Condition</ion-card-title>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Diagnosis</ion-label>\\r\\n              <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"medkit\\\"></ion-icon>\\r\\n              <ion-select\\r\\n                #links\\r\\n                ngModel\\r\\n                name=\\\"estate\\\"\\r\\n                interface=\\\"popover\\\"\\r\\n                placeholder=\\\"Select Option (*Required)\\\"\\r\\n                required\\r\\n                #diagnosisCtrl=\\\"ngModel\\\"\\r\\n                [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\"\\r\\n              >\\r\\n                <ion-select-option value=\\\"1\\\"\\r\\n                  >Ophthalmology disorders</ion-select-option\\r\\n                >\\r\\n                <ion-select-option value=\\\"2\\\"\\r\\n                  >Rheumatology disorders</ion-select-option\\r\\n                >\\r\\n                <ion-select-option value=\\\"3\\\"\\r\\n                  >Gastroenterology disorders</ion-select-option\\r\\n                >\\r\\n                <ion-select-option value=\\\"4\\\"\\r\\n                  >Dermatology disorders</ion-select-option\\r\\n                >\\r\\n                <ion-select-option value=\\\"5\\\"\\r\\n                  >Nephrology disorders</ion-select-option\\r\\n                >\\r\\n                <ion-select-option value=\\\"6\\\">Other</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n              <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n            </ion-item>\\r\\n            <div *ngIf=\\\"links.value === '1'\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Diagnosis Name</ion-label> \\r\\n                <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"medkit\\\"></ion-icon>\\r\\n              <ion-select [(ngModel)]=\\\"data.diagnosis\\\" name=\\\"diagnosis\\\" \\r\\n                          interface=\\\"popover\\\" placeholder=\\\"Select Option (*Required)\\\" required\\r\\n                          #diagnosisCtrl=\\\"ngModel\\\" [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n              <ion-select-option value='Uveitis'>Uveitis</ion-select-option>\\r\\n              <ion-select-option value='Anterior Uveitis'>Anterior Uveitis</ion-select-option>\\r\\n              <ion-select-option value='Intermediate Uveitis'>Intermediate Uveitis </ion-select-option>\\r\\n              <ion-select-option value='Posterior Uveitis'>Posterior Uveitis</ion-select-option>\\r\\n              <ion-select-option value='Panuveitis'>Panuveitis</ion-select-option>\\r\\n              <ion-select-option value='Scleritis'>Scleritis</ion-select-option>\\r\\n              <ion-select-option value='Orbital Inflammation'>Orbital Inflammation</ion-select-option>\\r\\n              <ion-select-option value='Ocular sarcoidosis'>Ocular sarcoidosis</ion-select-option>\\r\\n              <ion-select-option value='Inflammatory eye condition'>Inflammatory eye condition </ion-select-option>\\r\\n              <ion-select-option value='Cataract'>Cataract</ion-select-option>\\r\\n              <ion-select-option value='Aphakia (removed cataract)'>Aphakia (removed cataract)</ion-select-option>\\r\\n              <ion-select-option value='Pseudophakia (removed cataract and artificial lens in place'>Pseudophakia (removed cataract and artificial lens in place)</ion-select-option>\\r\\n              <ion-select-option value='Amblyopia'>Amblyopia</ion-select-option>\\r\\n              \\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n            <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n          </ion-item>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"links.value === '2'\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Diagnosis Name</ion-label>\\r\\n                <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"medkit\\\"></ion-icon>\\r\\n                <ion-select\\r\\n                  [(ngModel)]=\\\"data.diagnosis\\\"\\r\\n                  name=\\\"diagnosis\\\"\\r\\n                  interface=\\\"popover\\\"\\r\\n                  placeholder=\\\"Select Option (*Required)\\\"\\r\\n                  required\\r\\n                  #diagnosisCtrl=\\\"ngModel\\\"\\r\\n                  [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\"\\r\\n                >\\r\\n                  <ion-select-option value=\\\"Juvenile idiopathic arthritis (JIA)\\\"\\r\\n                    >Juvenile idiopathic arthritis (JIA)</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Systemic JIA\\\"\\r\\n                    >Systemic JIA</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option\\r\\n                    value=\\\"Polyarticular JIA, rheumatoid factor negative\\\"\\r\\n                    >Polyarticular JIA, rheumatoid factor\\r\\n                    negative</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option\\r\\n                    value=\\\"Polyarticular JIA: rheumatoid factor positive \\\"\\r\\n                    >Polyarticular JIA: rheumatoid factor positive\\r\\n                  </ion-select-option>\\r\\n                  <ion-select-option value=\\\"Oligoarticular arthritis\\\"\\r\\n                    >Oligoarticular arthritis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Enthesitis-related arthritis\\\"\\r\\n                    >Enthesitis-related arthritis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Psoriatic arthritis\\\"\\r\\n                    >Psoriatic arthritis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"JIA (type not known)\\\"\\r\\n                    >JIA (type not known)</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option\\r\\n                    value=\\\"Arthritis associated with chronic disease\\\"\\r\\n                    >Arthritis associated with chronic\\r\\n                    disease</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Behçet’s\\\"\\r\\n                    >Behçet’s</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Scleroderma\\\"\\r\\n                    >Scleroderma</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Systemic sclerosis\\\"\\r\\n                    >Systemic sclerosis\\r\\n                  </ion-select-option>\\r\\n                  <ion-select-option value=\\\"Localised scleroderma\\\"\\r\\n                    >Localised scleroderma\\r\\n                  </ion-select-option>\\r\\n                  <ion-select-option value=\\\"Juvenile dermatomyositis\\\"\\r\\n                    >Juvenile dermatomyositis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Vasculitis\\\"\\r\\n                    >Vasculitis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Kawasaki disease\\\"\\r\\n                    >Kawasaki disease</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Polyarteritis nodosa\\\"\\r\\n                    >Polyarteritis nodosa</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Other vasculitis\\\"\\r\\n                    >Other vasculitis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Systemic lupus erythematosus\\\"\\r\\n                    >Systemic lupus erythematosus</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Sarcoidosis\\\"\\r\\n                    >Sarcoidosis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Blau syndrome\\\"\\r\\n                    >Blau syndrome</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Overlap connective tissue disease\\\"\\r\\n                    >Overlap connective tissue disease</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option\\r\\n                    value=\\\"Chronic infantile neurological cutaneous and articular syndrome (CINCA)\\\"\\r\\n                    >Chronic infantile neurological cutaneous and articular\\r\\n                    syndrome (CINCA)</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option\\r\\n                    value=\\\"Chronic recurrent multifocal osteomyelitis (CRMO)\\\"\\r\\n                    >Chronic recurrent multifocal osteomyelitis (CRMO)\\r\\n                  </ion-select-option>\\r\\n                  <ion-select-option value=\\\"Periodic fever syndrome\\\"\\r\\n                    >Periodic fever syndrome</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Familial mediterranean fever (FMF)\\\"\\r\\n                    >Familial mediterranean fever (FMF)</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option\\r\\n                    value=\\\"Cryopyrin-Associated Periodic Syndrome (CAPS)\\\"\\r\\n                    >Cryopyrin-Associated Periodic Syndrome\\r\\n                    (CAPS)</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Other periodic fever syndrome\\\"\\r\\n                    >Other periodic fever syndrome</ion-select-option\\r\\n                  >\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n              <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n                <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"links.value === '3'\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Diagnosis Name</ion-label>\\r\\n                <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"medkit\\\"></ion-icon>\\r\\n                <ion-select\\r\\n                  [(ngModel)]=\\\"data.diagnosis\\\"\\r\\n                  name=\\\"diagnosis\\\"\\r\\n                  interface=\\\"popover\\\"\\r\\n                  placeholder=\\\"Select Option (*Required)\\\"\\r\\n                  required\\r\\n                  #diagnosisCtrl=\\\"ngModel\\\"\\r\\n                  [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\"\\r\\n                >\\r\\n                  <ion-select-option value=\\\"Autoimmune bowel disorder\\\"\\r\\n                    >Autoimmune bowel disorder</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Coeliac disease \\\"\\r\\n                    >Coeliac disease\\r\\n                  </ion-select-option>\\r\\n                  <ion-select-option value=\\\"Crohn’s\\\">Crohn’s</ion-select-option>\\r\\n                  <ion-select-option value=\\\"Colitis\\\">Colitis</ion-select-option>\\r\\n                  <ion-select-option value=\\\"Eosinophilic GI disorder\\\"\\r\\n                    >Eosinophilic GI disorder</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Oesophagitis\\\"\\r\\n                    >Oesophagitis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Pancreatitis\\\"\\r\\n                    >Pancreatitis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Inflammatory bowel disease\\\"\\r\\n                    >Inflammatory bowel disease</ion-select-option\\r\\n                  >\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n              <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n                <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"links.value === '4'\\\">\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Diagnosis Name</ion-label>\\r\\n                <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"medkit\\\"></ion-icon>\\r\\n                <ion-select\\r\\n                  [(ngModel)]=\\\"data.diagnosis\\\"\\r\\n                  name=\\\"diagnosis\\\"\\r\\n                  interface=\\\"popover\\\"\\r\\n                  placeholder=\\\"Select Option (*Required)\\\"\\r\\n                  required\\r\\n                  #diagnosisCtrl=\\\"ngModel\\\"\\r\\n                  [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\"\\r\\n                >\\r\\n                  <ion-select-option value=\\\"Eczema\\\">Eczema</ion-select-option>\\r\\n                  <ion-select-option value=\\\"Psoriasis\\\"\\r\\n                    >Psoriasis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Scleroderma\\\"\\r\\n                    >Scleroderma</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Behçet’s disease\\\"\\r\\n                    >Behçet’s disease</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Connective tissue disorders\\\"\\r\\n                    >Connective tissue disorders</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Dermatomyositis\\\"\\r\\n                    >Dermatomyositis</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Systemic lupus erythematosus\\\"\\r\\n                    >Systemic lupus erythematosus</ion-select-option\\r\\n                  >\\r\\n                  <ion-select-option value=\\\"Inflammatory skin condition \\\"\\r\\n                    >Inflammatory skin condition</ion-select-option\\r\\n                  >\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n              <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n                <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n              </ion-item>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"links.value === '5'\\\">\\r\\n              <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\">Diagnosis Name</ion-label> \\r\\n            <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"medkit\\\"></ion-icon>\\r\\n              <ion-select [(ngModel)]=\\\"data.diagnosis\\\" name=\\\"diagnosis\\\" \\r\\n              interface=\\\"popover\\\" placeholder=\\\"Select Option (*Required)\\\"\\r\\n              required #diagnosisCtrl=\\\"ngModel\\\"\\r\\n              [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n              <ion-select-option value='Chronic renal failure'>Chronic renal failure</ion-select-option>\\r\\n              <ion-select-option value='Lupus nephritis'>Lupus nephritis</ion-select-option>\\r\\n              <ion-select-option value='Polycystic kidney disease'>Polycystic kidney disease</ion-select-option>\\r\\n              <ion-select-option value='Nephritis'>Nephritis</ion-select-option>\\r\\n              <ion-select-option value='Focal segmental glomerulosclerosis (FSGS)'>Focal segmental glomerulosclerosis (FSGS)</ion-select-option>\\r\\n              <ion-select-option value='IgA nephropathy'>IgA nephropathy </ion-select-option>\\r\\n              <ion-select-option value='Kidney transplant patient'>Kidney transplant patient</ion-select-option>\\r\\n              <ion-select-option value='Membranoproliferative glomerulonephritis (MPGN)'>Membranoproliferative glomerulonephritis (MPGN)</ion-select-option>\\r\\n              <ion-select-option value='Chronic kidney disease'>Chronic kidney disease</ion-select-option>  \\r\\n              <ion-select-option value='Glomerulonephritis'>Glomerulonephritis</ion-select-option>\\r\\n              <ion-select-option value='Nephrotic syndrome'>Nephrotic syndrome</ion-select-option>\\r\\n              <ion-select-option value='Focal segmental glomerulosclerosis (FSGS)'>Focal segmental glomerulosclerosis (FSGS)</ion-select-option>\\r\\n              <ion-select-option value='Atypical HUS'>Atypical HUS</ion-select-option>\\r\\n              <ion-select-option value='Kidney replacement therapy: kidney transplant recipients'>Kidney replacement therapy: kidney transplant recipients</ion-select-option>\\r\\n              <ion-select-option value='Kidney replacement therapy: dialysis '>Kidney replacement therapy: dialysis </ion-select-option>\\r\\n            </ion-select>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n              <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n            </ion-item>\\r\\n          </div>  \\r\\n          <div *ngIf=\\\"links.value === '6'\\\">\\r\\n            <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\">diagnosis Name</ion-label>\\r\\n            <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"pencil\\\"></ion-icon>\\r\\n            <ion-input placeholder=\\\"Write diagnosis name\\\" [(ngModel)]=\\\"data.diagnosis\\\"\\r\\n                      name=\\\"diagnosis\\\" required #diagnosisCtrl=\\\"ngModel\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n              <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n            </ion-item>\\r\\n          </div>  \\r\\n        </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Diagnosis Details</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"document-text\\\"\\r\\n                class=\\\"orange\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-textarea\\r\\n                type=\\\"text\\\"\\r\\n                placeholder=\\\"Details about diagnosis\\\"\\r\\n                [(ngModel)]=\\\"data.diagnosis_details\\\"\\r\\n                name=\\\"diagnosis_details\\\"\\r\\n              ></ion-textarea>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Diagnosis Date</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"calendar-number\\\"\\r\\n                class=\\\"yellow\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-datetime\\r\\n                displayFormat=\\\"DD MMMM YYYY\\\"\\r\\n                placeholder=\\\"Date of Diagnosis\\\"\\r\\n                [(ngModel)]=\\\"data.diagnosis_date\\\"\\r\\n                name=\\\"diagnosis_date\\\"\\r\\n              ></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Notes</ion-label>\\r\\n              <ion-icon slot=\\\"start\\\" name=\\\"pencil\\\" class=\\\"green\\\"></ion-icon>\\r\\n              <ion-textarea\\r\\n                type=\\\"text\\\"\\r\\n                placeholder=\\\"Notes\\\"\\r\\n                [(ngModel)]=\\\"data.notes\\\"\\r\\n                name=\\\"notes\\\"\\r\\n              ></ion-textarea>\\r\\n            </ion-item>\\r\\n            <div class=\\\"ion-margin-vertical ion-text-right\\\">\\r\\n              <ion-button\\r\\n                type=\\\"button\\\"\\r\\n                fill=\\\"outline\\\"\\r\\n                color=\\\"danger\\\"\\r\\n                shape=\\\"round\\\"\\r\\n                (click)=\\\"form.reset()\\\"\\r\\n                >Clear</ion-button\\r\\n              >\\r\\n              <ion-button\\r\\n                type=\\\"button\\\"\\r\\n                type=\\\"submit\\\"\\r\\n                value=\\\"submit\\\"\\r\\n                id=\\\"submit\\\"\\r\\n                shape=\\\"round\\\"\\r\\n                color=\\\"success\\\"\\r\\n                [disabled]=\\\"!form.valid\\\"\\r\\n                >Submit</ion-button\\r\\n              >\\r\\n            </div>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\";","//  This file is adapted from:\r\n// https://edupala.com/ionic-template-driven-form-validation/ \r\n// https://www.freakyjolly.com/ionic-sqlite-tutorial-using-crud-operations/ \r\n// https://www.djamware.com/post/59c53a1280aca768e4d2b143/ionic-3-angular-4-and-sqlite-crud-offline-mobile-app \r\n// https://devdactic.com/ionic-4-sqlite-queries/\r\n// https://www.positronx.io/ionic-angular-modals-tutorial-passing-receiving-data/\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-entry',\r\n  templateUrl: './add-entry.page.html',\r\n  styleUrls: ['./add-entry.page.scss'],\r\n})\r\nexport class AddEntryPage {\r\n  public medicalhistory : Array<any> = [];\r\n  public isData          : boolean        = false;\r\n  public storedData      : any            = null;\r\n  private _db   : any;\r\n  data: any;\r\n  isSubmitted = false;\r\n  MedicalHistoryTable : string = 'CREATE TABLE IF NOT EXISTS medicalhistory (rowid INTEGER PRIMARY KEY AUTOINCREMENT, diagnosis TEXT, diagnosis_details TEXT, diagnosis_date TEXT, notes TEXT)'\r\n \r\n  constructor(private modalController: ModalController,\r\n              private navParams: NavParams,\r\n              private _alertController: AlertController, \r\n              public _plat: Platform, \r\n              public _sql: SQLite\r\n            ) \r\n{ \r\n  this.data = {diagnosis: \"\", diagnosis_details: \"\", diagnosis_date: \"\", notes: \"\"};           \r\n  this.medicalhistory = [];\r\n  this._plat\r\n  .ready()\r\n  .then(() => \r\n\r\n    {\r\n      this._createDatabase();\r\n    })\r\n    .catch(e => alert('create database error' + e));\r\n  }\r\n\r\n  public _createDatabase()\r\n  {\r\n    this._sql.create({\r\n      name: \"database.db\",\r\n      location: 'default'\r\n    })\r\n    .then((db: SQLiteObject) =>\r\n    {\r\n      this._db = db;\r\n      this._createDatabaseTables();\r\n    })\r\n    .catch(e => alert('create tables error' + e));\r\n  }\r\n  \r\n  async _createDatabaseTables() {\r\n    await this._db.executeSql(this.MedicalHistoryTable, []);\r\n    this.getData()\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n        this.getData();\r\n      }\r\n    \r\n      ionViewWillEnter() {\r\n        this.getData();\r\n      }\r\n    \r\n      public getData() {\r\n        this._db.executeSql('SELECT * FROM medicalhistory ORDER BY rowid DESC', <any>[])\r\n        .then(res => {\r\n          this.medicalhistory = [];\r\n          for(var i=0; i<res.rows.length; i++) {\r\n            this.medicalhistory.push({\r\n              rowid:res.rows.item(i).rowid,\r\n              diagnosis:res.rows.item(i).diagnosis,\r\n              diagnosis_details:res.rows.item(i).diagnosis_details,\r\n              diagnosis_date:res.rows.item(i).diagnosis_date,\r\n              notes:res.rows.item(i).notes\r\n            })\r\n          }\r\n        })\r\n            .catch(e => alert('get data error' + e));\r\n          }\r\n    \r\n  public saveData() {\r\n    this._db.executeSql('INSERT INTO medicalhistory VALUES(NULL,?,?,?,?)', [this.data.diagnosis, this.data.diagnosis_details, this.data.diagnosis_date, this.data.notes])\r\n    .then(res => {\r\n        this.closeModal()\r\n      })\r\n      .catch(e => alert(\"save data error\" + e));\r\n    }\r\n      \r\n    async submitData(myForm: NgForm) {\r\n      this.isSubmitted = true;\r\n      const alert = await this._alertController.create({\r\n        header: \"Save this entry?\",\r\n        message: \"Would you like to save this entry?\",\r\n        buttons: [\r\n          {\r\n            text:\"Cancel\"\r\n          },\r\n          {\r\n            text:\"save\",\r\n            handler: ()=> {\r\n              this.saveData();\r\n  \r\n            }\r\n          }\r\n        ]\r\n      });\r\n  \r\n      await alert.present();\r\n    }\r\n\r\n    noSubmit(e) {\r\n      e.preventDefault();\r\n    }\r\n    \r\n  async closeModal() {\r\n    await this.modalController.dismiss();\r\n    this.getData();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddEntryPage } from './add-entry.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddEntryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddEntryPageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}