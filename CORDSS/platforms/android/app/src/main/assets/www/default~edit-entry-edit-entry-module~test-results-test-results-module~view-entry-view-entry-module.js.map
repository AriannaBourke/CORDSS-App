{"version":3,"sources":["./src/app/tab3/test-results/edit-entry/edit-entry.page.html","./src/app/tab3/test-results/edit-entry/edit-entry.page.ts","./src/app/tab3/test-results/edit-entry/edit-entry.page.scss"],"names":[],"mappings":"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","file":"default~edit-entry-edit-entry-module~test-results-test-results-module~view-entry-view-entry-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Edit Test Result info!</ion-title>\\r\\n    <ion-button\\r\\n      color=\\\"dark\\\"\\r\\n      fill=\\\"clear\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      size=\\\"small\\\"\\r\\n      (click)=\\\"closeModal()\\\"\\r\\n      ><ion-icon size=\\\"large\\\" name=\\\"arrow-back-outline\\\"></ion-icon\\r\\n    ></ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <ion-list *ngFor=\\\"let result of testresults; let i = index\\\" class=\\\"list\\\">\\r\\n    <ion-card>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-card-title>Edit Test Result</ion-card-title>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"update(rowid)\\\">\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label color=\\\"medium\\\" position=\\\"stacked\\\"\\r\\n                  >Test Date</ion-label\\r\\n                >\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"calendar-number\\\"\\r\\n                  class=\\\"red\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-datetime\\r\\n                  displayFormat=\\\"DD MMMM YYYY\\\"\\r\\n                  placeholder=\\\"{{result.date | date: 'dd MMMM y'}}\\\"\\r\\n                  [(ngModel)]=\\\"data.date\\\"\\r\\n                  name=\\\"date\\\"\\r\\n                  required\\r\\n                  #dateCtrl=\\\"ngModel\\\"\\r\\n                ></ion-datetime>\\r\\n              </ion-item>\\r\\n              <ion-item *ngIf=\\\"!dateCtrl.valid && dateCtrl.touched\\\">\\r\\n                <ion-text color=\\\"danger\\\">*Date is required</ion-text>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        \\r\\n               <ion-row>\\r\\n                <ion-col>\\r\\n                  <ion-item>\\r\\n                    <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Test Type</ion-label>\\r\\n                    <ion-icon slot=\\\"start\\\" name=\\\"medkit\\\" class=\\\"orange\\\"></ion-icon>\\r\\n                    <ion-input \\r\\n                    type=\\\"text\\\"\\r\\n                    placeholder=\\\"{{result.type}}\\\"\\r\\n                    [(ngModel)]=\\\"data.type\\\"\\r\\n                    name=\\\"type\\\" required\\r\\n                    #typeCtrl=\\\"ngModel\\\"\\r\\n                    ></ion-input>\\r\\n                    <ion-item *ngIf=\\\"!typeCtrl.valid && typeCtrl.touched\\\">\\r\\n                      <ion-text color=\\\"danger\\\">*Test type is required</ion-text>\\r\\n                      </ion-item>\\r\\n                  </ion-item>\\r\\n                </ion-col>\\r\\n               </ion-row>\\r\\n               \\r\\n               <ion-row>\\r\\n                <ion-col>\\r\\n                  <ion-item>\\r\\n                    <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Photo</ion-label>\\r\\n                    <ion-icon slot=\\\"start\\\" name=\\\"camera\\\" class=\\\"yellow\\\" (click)=\\\"takePhoto()\\\" ></ion-icon>\\r\\n                    <div class=\\\"images-wrapper\\\">\\r\\n                      <div class=\\\"pick-single-image\\\" *ngFor=\\\"let photo of photos; let id = index\\\">\\r\\n                        <ion-icon name=\\\"trash\\\" class=\\\"deleteIcon\\\" (click)=\\\"deletePhoto(id)\\\"></ion-icon>\\r\\n                        <img [src]=\\\"photo\\\" alt=\\\"\\\" srcset=\\\"\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <ion-input \\r\\n                    type=\\\"text\\\"\\r\\n                  placeholder=\\\"{{result.photo}}\\\"\\r\\n                  [(ngModel)]=\\\"data.photo\\\"\\r\\n                  name=\\\"photo\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Notes</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"pencil-outline\\\"\\r\\n                  class=\\\"teal\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-textarea\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"{{result.notes}}\\\"\\r\\n                  [(ngModel)]=\\\"data.notes\\\"\\r\\n                  name=\\\"notes\\\"\\r\\n                ></ion-textarea>\\r\\n              </ion-item>\\r\\n              <div class=\\\"ion-margin-vertical ion-text-right\\\">\\r\\n                <ion-button\\r\\n                  type=\\\"button\\\"\\r\\n                  fill=\\\"outline\\\"\\r\\n                  color=\\\"danger\\\"\\r\\n                  shape=\\\"round\\\"\\r\\n                  (click)=\\\"form.reset()\\\"\\r\\n                >\\r\\n                  <ion-icon slot=\\\"start\\\" name=\\\"close\\\"></ion-icon\\r\\n                  >Clear</ion-button\\r\\n                >\\r\\n\\r\\n                <ion-button\\r\\n                  type=\\\"button\\\"\\r\\n                  shape=\\\"round\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  value=\\\"submit\\\"\\r\\n                  id=\\\"submit\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                >\\r\\n                  <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon\\r\\n                  >Update</ion-button\\r\\n                >\\r\\n              </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </form>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\";","//  This file is adapted from: Database - \r\n// https://edupala.com/ionic-template-driven-form-validation/ \r\n// https://www.freakyjolly.com/ionic-sqlite-tutorial-using-crud-operations/ \r\n// https://www.djamware.com/post/59c53a1280aca768e4d2b143/ionic-3-angular-4-and-sqlite-crud-offline-mobile-app \r\n// https://devdactic.com/ionic-4-sqlite-queries/\r\n// https://www.positronx.io/ionic-angular-modals-tutorial-passing-receiving-data/\r\n// Camera: https://www.remotestack.io/ionic-image-picker-and-multiple-image-preview-tutorial/\r\n// https://www.freakyjolly.com/ionic-native-camera-tutorial-example-application/ \\\\\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavParams, ModalController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\r\nimport { ReactiveFormsModule, FormControl, FormGroup, FormBuilder } from '@angular/forms'\r\nimport { NgForm } from '@angular/forms';\r\nimport { CameraOptions, Camera } from \"@ionic-native/camera/ngx\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-entry',\r\n  templateUrl: './edit-entry.page.html',\r\n  styleUrls: ['./edit-entry.page.scss'],\r\n})\r\nexport class EditEntryPage {\r\n  photos;\r\n  base64Image;\r\n  myProfileImage;\r\n  public testresults : Array<any> = [];\r\n  public pictures : Array<any> = [];\r\n  public isData          : boolean        = false;\r\n  public storedData      : any            = null;\r\n  private _db   : any;\r\n  isSubmitted = false;\r\n  rowid: any;\r\n  TestResultsTable : string = 'CREATE TABLE IF NOT EXISTS testresults (rowid INTEGER PRIMARY KEY AUTOINCREMENT, date TEXT, type TEXT, photo TEXT, notes TEXT)'\r\n  data = {date: \"\", type: \"\", photo: \"\", notes: \"\"};\r\n  PicturesTable : string = 'CREATE TABLE IF NOT EXISTS pictures (rowid INTEGER PRIMARY KEY AUTOINCREMENT, cardid INTEGER, picture TEXT)'\r\n  datapicture = {cardid:\"\", picture: \"\" };\r\n\r\n  constructor(private modalController: ModalController,\r\n              private navParams: NavParams,\r\n              private _alertController: AlertController, \r\n              public _plat: Platform, \r\n              public _sql: SQLite,\r\n              private camera : Camera,\r\n              private alertCtrl: AlertController,\r\n            ) \r\n            {\r\n              this.rowid=navParams.get('rowid');        \r\n              this.testresults = [];\r\n              this.pictures =[];\r\n              this._plat\r\n              .ready()\r\n              .then(() => \r\n            \r\n                {\r\n                  this._createDatabase();\r\n                })\r\n                .catch(e => alert('create database error' + e));\r\n              }\r\n            \r\n              public _createDatabase()\r\n              {\r\n                this._sql.create({\r\n                  name: \"database.db\",\r\n                  location: 'default'\r\n                })\r\n                .then((db: SQLiteObject) =>\r\n                {\r\n                  this._db = db;\r\n                  this._createDatabaseTables();\r\n                })\r\n                .catch(e => alert('create tables error' + e));\r\n              }\r\n              \r\n              async _createDatabaseTables() {\r\n                await this._db.executeSql(this.TestResultsTable, []);\r\n                await this._db.executeSql(this.PicturesTable, []);\r\n\r\n                this.getData(this.rowid);\r\n                this.getDataPictures(this.rowid);\r\n\r\n\r\n              }\r\n\r\n                \r\n              public getData(rowid) {\r\n                this._db.executeSql('SELECT * FROM testresults WHERE rowid=?', [rowid])\r\n                .then(res => {\r\n                  this.testresults = [];\r\n                  for(var i=0; i<res.rows.length; i++) {\r\n                    this.testresults.push({\r\n                      rowid:res.rows.item(i).rowid,\r\n                      date:res.rows.item(i).date,\r\n                      type:res.rows.item(i).type,\r\n                      photo:res.rows.item(i).photo,\r\n                      notes:res.rows.item(i).notes,\r\n                    })\r\n                  }\r\n                })\r\n                    .catch(e => alert('get data error' + e));\r\n              }\r\n\r\n              public getDataPictures(rowid) {\r\n                this._db.executeSql('SELECT * FROM pictures WHERE cardid=?', [rowid])\r\n                .then(res => {\r\n                  this.pictures = [];\r\n                  for(var i=0; i<res.rows.length; i++) {\r\n                    this.pictures.push({\r\n                      rowid:res.rows.item(i).rowid,\r\n                      cardid:res.rows.item(i).cardid,\r\n                      picture:res.rows.item(i).picture,\r\n                      \r\n                    })\r\n                  }\r\n                })\r\n                    .catch(e => alert('get data error' + e));\r\n              }     \r\n            \r\n              async closeModal() {\r\n                await this.modalController.dismiss();\r\n              }\r\n\r\n\r\n              async update(rowid) {\r\n                this.isSubmitted = true;\r\n                const alert = await this._alertController.create({\r\n                  header: \"Update this entry?\",\r\n                  message: \"Would you like to update this entry in your test results?\",\r\n                  buttons: [\r\n                    {\r\n                      text:\"Cancel\"\r\n                    },\r\n                    {\r\n                      text:\"Save\",\r\n                      handler: ()=> {\r\n                        this.updateSQL(rowid);\r\n            \r\n                      }\r\n                    }\r\n                  ]\r\n                });\r\n                await alert.present()\r\n              }\r\n\r\n              noSubmit(e) {\r\n                e.preventDefault();\r\n              }\r\n\r\n              async updatepictures(rowid) {\r\n                this.isSubmitted = true;\r\n                const alert = await this._alertController.create({\r\n                  header: \"Update this entry?\",\r\n                  message: \"Would you like to update this entry in your test results?\",\r\n                  buttons: [\r\n                    {\r\n                      text:\"Cancel\"\r\n                    },\r\n                    {\r\n                      text:\"Save\",\r\n                      handler: ()=> {\r\n                        this.updateSQLpictures(rowid);\r\n            \r\n                      }\r\n                    }\r\n                  ]\r\n                });\r\n                await alert.present()\r\n              }\r\n\r\n              noSubmitpictures(e) {\r\n                e.preventDefault();\r\n              }\r\n\r\n\r\n            async updateSQL(rowid) {\r\n              if(this.data.date != \"\") {\r\n                this._db.executeSql('UPDATE testresults SET date=? WHERE rowid=?',[this.data.date, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              .catch(e => alert('update error' + e));\r\n              }\r\n              if(this.data.type != \"\"){\r\n                this._db.executeSql('UPDATE testresults SET doctor=? WHERE rowid=?', [this.data.type, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              }\r\n              if(this.data.photo != \"\"){\r\n                this._db.executeSql('UPDATE testresults SET place=? WHERE rowid=?', [this.data.photo, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              }\r\n              if(this.data.notes != \"\"){\r\n                this._db.executeSql('UPDATE testresults SET questions=? WHERE rowid=?', [this.data.notes, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              }\r\n              this.closeModal();\r\n          }\r\n\r\n\r\n          async updateSQLpictures(rowid) {\r\n            if(this.datapicture.cardid != \"\") {\r\n              this._db.executeSql('UPDATE pictures SET cardid=? WHERE rowid=?',[this.datapicture.cardid, rowid])\r\n              .then(res => {\r\n                this.closeModal();\r\n              })\r\n            .catch(e => alert('update error' + e));\r\n            }\r\n            if(this.datapicture.picture != \"\"){\r\n              this._db.executeSql('UPDATE pictures SET picture=? WHERE rowid=?', [this.datapicture.picture, rowid])\r\n              .then(res => {\r\n                this.closeModal();\r\n              })\r\n            }\r\n            this.closeModal();\r\n        }  \r\n\r\n          ngOnInit() {\r\n            this.photos = [];\r\n          }\r\n        \r\n          takePhoto()\r\n          {\r\n            const options : CameraOptions = {\r\n              quality: 100,\r\n              destinationType: this.camera.DestinationType.DATA_URL,\r\n              encodingType: this.camera.EncodingType.JPEG,\r\n              mediaType: this.camera.MediaType.PICTURE,\r\n              targetHeight: 200,\r\n              correctOrientation: true,\r\n              sourceType: this.camera.PictureSourceType.SAVEDPHOTOALBUM\r\n              };\r\n        \r\n              this.camera.getPicture(options)\r\n              .then((ImageData)=> {\r\n                  this.base64Image = \"data:image/jpeg;base64,\" + ImageData;\r\n                  this.photos.push(this.base64Image);\r\n                  this.photos.reverse();\r\n                })\r\n              }\r\n            \r\n          \r\n            deletePhoto(index) {\r\n              const alert = this.alertCtrl.create({\r\n                header: 'Sure you want to delete this photo? There is NO undo!',\r\n                message: '',\r\n                buttons: [\r\n                  {\r\n                    text: 'No',\r\n                    handler: () => {\r\n                      console.log('Disagree clicked');\r\n                    }\r\n                  }, \r\n                  {\r\n                    text: 'Yes',\r\n                    handler: () => {\r\n                      console.log('Agree clicked');\r\n                      this.photos.splice(index, 1);\r\n                    }\r\n                  }\r\n                ]\r\n              }).then(res => {\r\n                res.present();\r\n            });\r\n          }\r\n          \r\n}\r\n","export default \"ion-select {\\n  color: black;\\n  --placeholder-opacity: 1;\\n  max-width: 95%;\\n}\\n\\n::ng-deep .mycomponent-wider-popover {\\n  --width: 95%;\\n  --max-width: 400px;\\n}\\n\\nion-input {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n\\nion-datetime {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n\\n.image-container {\\n  background-size: cover;\\n  min-height: 220px;\\n}\\n\\n@media (min-width: 0px) {\\n  .images-wrapper {\\n    column-count: 2;\\n  }\\n}\\n\\n@media (min-width: 420px) {\\n  .images-wrapper {\\n    column-count: 3;\\n  }\\n}\\n\\n@media (min-width: 720px) {\\n  .images-wrapper {\\n    column-count: 3;\\n  }\\n}\\n\\n.pick-single-image {\\n  margin: 4px;\\n}\\n\\nion-textarea {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n\\nion-datetime {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcZWRpdC1lbnRyeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0Esd0JBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSx3QkFBQTtBQUNGOztBQUVRO0VBQ0UsWUFBQTtFQUNGLHdCQUFBO0FBQ1I7O0FBRUE7RUFDRSxzQkFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGVBQUE7RUFDRjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxlQUFBO0VBQUY7QUFDRjs7QUFHQTtFQUNFO0lBQ0UsZUFBQTtFQURGO0FBQ0Y7O0FBSUE7RUFDRSxXQUFBO0FBRkY7O0FBTUE7RUFDRSxZQUFBO0VBQ0Esd0JBQUE7QUFIRjs7QUFNQTtFQUNFLFlBQUE7RUFDQSx3QkFBQTtBQUhGIiwiZmlsZSI6ImVkaXQtZW50cnkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNlbGVjdCB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcclxuICBtYXgtd2lkdGg6IDk1JTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5teWNvbXBvbmVudC13aWRlci1wb3BvdmVyIHtcclxuICAtLXdpZHRoOiA5NSU7XHJcbiAgLS1tYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG5pb24taW5wdXQge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbiAgICAgICAgaW9uLWRhdGV0aW1lIHtcclxuICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XHJcbiAgICAgICAgICB9XHJcblxyXG4uaW1hZ2UtY29udGFpbmVyIHtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIG1pbi1oZWlnaHQ6IDIyMHB4O1xyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMHB4KSB7XHJcbiAgLmltYWdlcy13cmFwcGVyIHtcclxuICAgIGNvbHVtbi1jb3VudDogMjtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA0MjBweCkge1xyXG4gIC5pbWFnZXMtd3JhcHBlciB7XHJcbiAgICBjb2x1bW4tY291bnQ6IDM7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzIwcHgpIHtcclxuICAuaW1hZ2VzLXdyYXBwZXIge1xyXG4gICAgY29sdW1uLWNvdW50OiAzO1xyXG4gIH1cclxufVxyXG5cclxuLnBpY2stc2luZ2xlLWltYWdlIHtcclxuICBtYXJnaW46IDRweDtcclxufVxyXG4gICAgXHJcbiAgICBcclxuaW9uLXRleHRhcmVhIHtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgLS1wbGFjZWhvbGRlci1vcGFjaXR5OiAxO1xyXG59XHJcblxyXG5pb24tZGF0ZXRpbWUge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XHJcbn1cclxuIl19 */\";"],"sourceRoot":"webpack:///"}