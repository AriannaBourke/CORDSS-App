{"version":3,"sources":["./src/app/tab3/medical-history/edit-entry/edit-entry.page.html","./src/app/tab3/medical-history/edit-entry/edit-entry.page.ts","./src/app/tab3/medical-history/edit-entry/edit-entry.page.scss"],"names":[],"mappings":"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","file":"default~edit-entry-edit-entry-module~medical-history-medical-history-module~view-entry-view-entry-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Edit your Condition info!</ion-title>\\r\\n    <ion-button\\r\\n      color=\\\"dark\\\"\\r\\n      fill=\\\"clear\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      size=\\\"small\\\"\\r\\n      (click)=\\\"closeModal()\\\"\\r\\n      ><ion-icon size=\\\"large\\\" name=\\\"arrow-back-outline\\\"></ion-icon\\r\\n    ></ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <ion-list *ngFor=\\\"let history of medicalhistory; let i = index\\\" class=\\\"list\\\">\\r\\n    <ion-card>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-card-title>Edit Condition</ion-card-title>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n        \\r\\n\\r\\n      <form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"update(rowid)\\\">\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Diagnosis</ion-label>\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"medkit\\\" class=\\\"red\\\"></ion-icon>\\r\\n            <ion-select \\r\\n            #links ngModel \\r\\n            name=\\\"estate\\\" \\r\\n            interface=\\\"popover\\\" \\r\\n            placeholder=\\\"{{history.diagnosis}}\\\"\\r\\n            required\\r\\n            #diagnosisCtrl=\\\"ngModel\\\"\\r\\n            [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n            <ion-select-option value='1'>Ophthalmology disorders</ion-select-option>\\r\\n            <ion-select-option value='2'>Rheumatology disorders</ion-select-option>\\r\\n            <ion-select-option value='3'>Gastroenterology disorders</ion-select-option>\\r\\n            <ion-select-option value='4'>Dermatology disorders</ion-select-option>\\r\\n            <ion-select-option value='5'>Nephrology disorders</ion-select-option>\\r\\n            <ion-select-option value='6'>Other</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n          <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n        </ion-item>       \\r\\n          <div *ngIf=\\\"links.value === '1'\\\">\\r\\n            <ion-item>\\r\\n              <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Diagnosis Name</ion-label> \\r\\n              <ion-icon slot=\\\"start\\\" name=\\\"medkit\\\" class=\\\"red\\\"></ion-icon>\\r\\n            <ion-select [(ngModel)]=\\\"data.diagnosis\\\" name=\\\"diagnosis\\\" \\r\\n                        interface=\\\"popover\\\" placeholder=\\\"Select Option (*Required)\\\" required\\r\\n                        #diagnosisCtrl=\\\"ngModel\\\" [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n            <ion-select-option value='Uveitis'>Uveitis</ion-select-option>\\r\\n            <ion-select-option value='Anterior Uveitis'>Anterior Uveitis</ion-select-option>\\r\\n            <ion-select-option value='Intermediate Uveitis'>Intermediate Uveitis </ion-select-option>\\r\\n            <ion-select-option value='Posterior Uveitis'>Posterior Uveitis</ion-select-option>\\r\\n            <ion-select-option value='Panuveitis'>Panuveitis</ion-select-option>\\r\\n            <ion-select-option value='Scleritis'>Scleritis</ion-select-option>\\r\\n            <ion-select-option value='Orbital Inflammation'>Orbital Inflammation</ion-select-option>\\r\\n            <ion-select-option value='Ocular sarcoidosis'>Ocular sarcoidosis</ion-select-option>\\r\\n            <ion-select-option value='Inflammatory eye condition'>Inflammatory eye condition </ion-select-option>\\r\\n            <ion-select-option value='Cataract'>Cataract</ion-select-option>\\r\\n            <ion-select-option value='Aphakia (removed cataract)'>Aphakia (removed cataract)</ion-select-option>\\r\\n            <ion-select-option value='Pseudophakia (removed cataract and artificial lens in place)'>Pseudophakia (removed cataract and artificial lens in place)</ion-select-option>\\r\\n            <ion-select-option value='Amblyopia'>Amblyopia</ion-select-option>\\r\\n            \\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n          <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n        </ion-item>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"links.value === '2'\\\">\\r\\n            <ion-item>\\r\\n              <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Diagnosis Name</ion-label> \\r\\n              <ion-icon slot=\\\"start\\\" name=\\\"medkit\\\" class=\\\"red\\\"></ion-icon>\\r\\n            <ion-select [(ngModel)]=\\\"data.diagnosis\\\" name=\\\"diagnosis\\\" \\r\\n                        interface=\\\"popover\\\" placeholder=\\\"Select Option (*Required)\\\"\\r\\n                        required #diagnosisCtrl=\\\"ngModel\\\" \\r\\n                        [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n            <ion-select-option value='Juvenile idiopathic arthritis (JIA)'>Juvenile idiopathic arthritis (JIA)</ion-select-option>\\r\\n            <ion-select-option value='Systemic JIA'>Systemic JIA</ion-select-option>\\r\\n            <ion-select-option value='Polyarticular JIA, rheumatoid factor negative'>Polyarticular JIA, rheumatoid factor negative</ion-select-option>\\r\\n            <ion-select-option value='Polyarticular JIA: rheumatoid factor positive '>Polyarticular JIA: rheumatoid factor positive </ion-select-option>\\r\\n            <ion-select-option value='Oligoarticular arthritis'>Oligoarticular arthritis</ion-select-option>\\r\\n            <ion-select-option value='Enthesitis-related arthritis'>Enthesitis-related arthritis</ion-select-option>\\r\\n            <ion-select-option value='Psoriatic arthritis'>Psoriatic arthritis</ion-select-option>\\r\\n            <ion-select-option value='JIA (type not known)'>JIA (type not known)</ion-select-option>\\r\\n            <ion-select-option value='Arthritis associated with chronic disease'>Arthritis associated with chronic disease</ion-select-option>\\r\\n            <ion-select-option value='Behçet’s'>Behçet’s</ion-select-option>\\r\\n            <ion-select-option value='Scleroderma'>Scleroderma</ion-select-option>\\r\\n            <ion-select-option value='Systemic sclerosis'>Systemic sclerosis </ion-select-option>\\r\\n            <ion-select-option value='Localised scleroderma'>Localised scleroderma </ion-select-option>\\r\\n            <ion-select-option value='Juvenile dermatomyositis'>Juvenile dermatomyositis</ion-select-option>\\r\\n            <ion-select-option value='Vasculitis'>Vasculitis</ion-select-option>\\r\\n            <ion-select-option value='Kawasaki disease'>Kawasaki disease</ion-select-option>\\r\\n            <ion-select-option value='Polyarteritis nodosa'>Polyarteritis nodosa</ion-select-option>\\r\\n            <ion-select-option value='Other vasculitis'>Other vasculitis</ion-select-option>\\r\\n            <ion-select-option value='Systemic lupus erythematosus'>Systemic lupus erythematosus</ion-select-option>\\r\\n            <ion-select-option value='Sarcoidosis'>Sarcoidosis</ion-select-option>\\r\\n            <ion-select-option value='Blau syndrome'>Blau syndrome</ion-select-option>\\r\\n            <ion-select-option value='Overlap connective tissue disease'>Overlap connective tissue disease</ion-select-option>\\r\\n            <ion-select-option value='Chronic infantile neurological cutaneous and articular syndrome (CINCA)'>Chronic infantile neurological cutaneous and articular syndrome (CINCA)</ion-select-option>\\r\\n            <ion-select-option value='Chronic recurrent multifocal osteomyelitis (CRMO)'>Chronic recurrent multifocal osteomyelitis (CRMO) </ion-select-option>\\r\\n            <ion-select-option value='Periodic fever syndrome'>Periodic fever syndrome</ion-select-option>\\r\\n            <ion-select-option value='Familial mediterranean fever (FMF)'>Familial mediterranean fever (FMF)</ion-select-option>\\r\\n            <ion-select-option value='Cryopyrin-Associated Periodic Syndrome (CAPS)'>Cryopyrin-Associated Periodic Syndrome (CAPS)</ion-select-option> \\r\\n            <ion-select-option value='Other periodic fever syndrome'>Other periodic fever syndrome</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n          <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n        </ion-item>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"links.value === '3'\\\">\\r\\n            <ion-item>\\r\\n            <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Diagnosis Name</ion-label> \\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"medkit\\\" class=\\\"red\\\"></ion-icon>\\r\\n            <ion-select [(ngModel)]=\\\"data.diagnosis\\\" name=\\\"diagnosis\\\" \\r\\n                        interface=\\\"popover\\\" placeholder=\\\"Select Option (*Required)\\\"\\r\\n                        required #diagnosisCtrl=\\\"ngModel\\\"\\r\\n                        [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n            <ion-select-option value='Autoimmune bowel disorder'>Autoimmune bowel disorder</ion-select-option>\\r\\n            <ion-select-option value='Coeliac disease '>Coeliac disease </ion-select-option>\\r\\n            <ion-select-option value='Crohn’s'>Crohn’s</ion-select-option>\\r\\n            <ion-select-option value='Colitis'>Colitis</ion-select-option>\\r\\n            <ion-select-option value='Eosinophilic GI disorder'>Eosinophilic GI disorder</ion-select-option>\\r\\n            <ion-select-option value='Oesophagitis'>Oesophagitis</ion-select-option>\\r\\n            <ion-select-option value='Pancreatitis'>Pancreatitis</ion-select-option>\\r\\n            <ion-select-option value='Inflammatory bowel disease'>Inflammatory bowel disease</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n          <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n        </ion-item>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"links.value === '4'\\\">\\r\\n            <ion-item>\\r\\n          <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Diagnosis Name</ion-label> \\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"medkit\\\" class=\\\"red\\\"></ion-icon>\\r\\n            <ion-select [(ngModel)]=\\\"data.diagnosis\\\" name=\\\"diagnosis\\\" \\r\\n                        interface=\\\"popover\\\" placeholder=\\\"Select Option (*Required)\\\"\\r\\n                        required #diagnosisCtrl=\\\"ngModel\\\"\\r\\n                        [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n            <ion-select-option value='Eczema'>Eczema</ion-select-option>\\r\\n            <ion-select-option value='Psoriasis'>Psoriasis</ion-select-option>\\r\\n            <ion-select-option value='Scleroderma'>Scleroderma</ion-select-option>\\r\\n            <ion-select-option value='Behçet’s disease'>Behçet’s disease</ion-select-option>\\r\\n            <ion-select-option value='Connective tissue disorders'>Connective tissue disorders</ion-select-option>\\r\\n            <ion-select-option value='Dermatomyositis'>Dermatomyositis</ion-select-option>\\r\\n            <ion-select-option value='Systemic lupus erythematosus'>Systemic lupus erythematosus</ion-select-option>\\r\\n            <ion-select-option value='Inflammatory skin condition '>Inflammatory skin condition</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n          <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n        </ion-item>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"links.value === '5'\\\">\\r\\n            <ion-item>\\r\\n          <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Diagnosis Name</ion-label> \\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"medkit\\\" class=\\\"red\\\"></ion-icon>\\r\\n            <ion-select [(ngModel)]=\\\"data.diagnosis\\\" name=\\\"diagnosis\\\" \\r\\n            interface=\\\"popover\\\" placeholder=\\\"Select Option (*Required)\\\"\\r\\n            required #diagnosisCtrl=\\\"ngModel\\\"\\r\\n            [interfaceOptions]=\\\"{'cssClass': 'mycomponent-wider-popover'}\\\">\\r\\n          <ion-select-option value='Nephritis'>Nephritis</ion-select-option>\\r\\n            <ion-select-option value='Membranoproliferative glomerulonephritis (MPGN)'>Membranoproliferative glomerulonephritis (MPGN)</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n            <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n          </ion-item>\\r\\n        </div>  \\r\\n        <div *ngIf=\\\"links.value === '6'\\\">\\r\\n          <ion-item>\\r\\n          <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">diagnosis Name</ion-label>\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"pencil\\\" class=\\\"red\\\"></ion-icon>\\r\\n          <ion-input placeholder=\\\"Write diagnosis name\\\" [(ngModel)]=\\\"data.diagnosis\\\"\\r\\n                    name=\\\"diagnosis\\\" required #diagnosisCtrl=\\\"ngModel\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item *ngIf=\\\"!diagnosisCtrl.valid && diagnosisCtrl.touched\\\">\\r\\n            <ion-text color=\\\"danger\\\">*Diagnosis is required</ion-text>\\r\\n          </ion-item>\\r\\n        </div>  \\r\\n      </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Details About Diagnosis</ion-label>\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"document-text\\\" class=\\\"orange\\\"></ion-icon>\\r\\n            <ion-textarea\\r\\n            type=\\\"text\\\"\\r\\n            placeholder=\\\"{{history.diagnosis_details}}\\\"\\r\\n            [(ngModel)]=\\\"data.diagnosis_details\\\"\\r\\n            name=\\\"diagnosis_details\\\"\\r\\n          ></ion-textarea>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Diagnosis Date</ion-label>\\r\\n            <ion-icon slot=\\\"start\\\" name=\\\"calendar-number\\\" class=\\\"yellow\\\"></ion-icon>\\r\\n            <ion-datetime\\r\\n            displayFormat=\\\"DD MMMM YYYY\\\"\\r\\n            placeholder=\\\"{{history.diagnosis_date | date: 'dd MMMM YYYY'}}\\\"\\r\\n            [(ngModel)]=\\\"data.diagnosis_date\\\"\\r\\n            name=\\\"diagnosis_date\\\"\\r\\n          ></ion-datetime>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n       \\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Notes</ion-label>\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"pencil\\\" class=\\\"green\\\"></ion-icon>\\r\\n                <ion-textarea\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"{{history.notes}}\\\"\\r\\n                  [(ngModel)]=\\\"data.notes\\\"\\r\\n                  name=\\\"notes\\\"\\r\\n                ></ion-textarea>\\r\\n              </ion-item>\\r\\n              <div class=\\\"ion-margin-vertical ion-text-right\\\">\\r\\n                <ion-button\\r\\n                  type=\\\"button\\\"\\r\\n                  fill=\\\"outline\\\"\\r\\n                  color=\\\"danger\\\"\\r\\n                  shape=\\\"round\\\"\\r\\n                  (click)=\\\"form.reset()\\\"\\r\\n                >\\r\\n                  <ion-icon slot=\\\"start\\\" name=\\\"close\\\"></ion-icon\\r\\n                  >Clear</ion-button\\r\\n                >\\r\\n\\r\\n                <ion-button\\r\\n                  type=\\\"button\\\"\\r\\n                  shape=\\\"round\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  value=\\\"submit\\\"\\r\\n                  id=\\\"submit\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                >\\r\\n                  <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon\\r\\n                  >Update</ion-button\\r\\n                >\\r\\n              </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </form>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\";","//  This file is adapted from:\r\n// https://edupala.com/ionic-template-driven-form-validation/ \r\n// https://www.freakyjolly.com/ionic-sqlite-tutorial-using-crud-operations/ \r\n// https://www.djamware.com/post/59c53a1280aca768e4d2b143/ionic-3-angular-4-and-sqlite-crud-offline-mobile-app \r\n// https://devdactic.com/ionic-4-sqlite-queries/\r\n// https://www.positronx.io/ionic-angular-modals-tutorial-passing-receiving-data/\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavParams, ModalController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\r\nimport { ReactiveFormsModule, FormControl, FormGroup, FormBuilder } from '@angular/forms'\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-entry',\r\n  templateUrl: './edit-entry.page.html',\r\n  styleUrls: ['./edit-entry.page.scss'],\r\n})\r\nexport class EditEntryPage {\r\n  public medicalhistory : Array<any> = [];\r\n  public isData          : boolean        = false;\r\n  public storedData      : any            = null;\r\n  private _db   : any;\r\n  isSubmitted = false;\r\n  rowid: any;\r\n  MedicalHistoryTable : string = 'CREATE TABLE IF NOT EXISTS medicalhistory (rowid INTEGER PRIMARY KEY AUTOINCREMENT, diagnosis TEXT, diagnosis_details TEXT, diagnosis_date TEXT, notes TEXT)'\r\n  data = {diagnosis: \"\", diagnosis_details: \"\", diagnosis_date: \"\", notes: \"\"};\r\n\r\n\r\n  constructor(private modalController: ModalController,\r\n              private navParams: NavParams,\r\n              private _alertController: AlertController, \r\n              public _plat: Platform, \r\n              public _sql: SQLite,\r\n            ) \r\n            {\r\n              this.rowid=navParams.get('rowid');        \r\n              this.medicalhistory = [];\r\n              this._plat\r\n              .ready()\r\n              .then(() => \r\n            \r\n                {\r\n                  this._createDatabase();\r\n                })\r\n                .catch(e => alert('create database error' + e));\r\n              }\r\n            \r\n              public _createDatabase()\r\n              {\r\n                this._sql.create({\r\n                  name: \"database.db\",\r\n                  location: 'default'\r\n                })\r\n                .then((db: SQLiteObject) =>\r\n                {\r\n                  this._db = db;\r\n                  this._createDatabaseTables();\r\n                })\r\n                .catch(e => alert('create tables error' + e));\r\n              }\r\n              \r\n              async _createDatabaseTables() {\r\n                await this._db.executeSql(this.MedicalHistoryTable, []);\r\n                this.getData(this.rowid);\r\n              }\r\n\r\n                \r\n              public getData(rowid) {\r\n                this._db.executeSql('SELECT * FROM medicalhistory WHERE rowid=?', [rowid])\r\n                .then(res => {\r\n                  this.medicalhistory = [];\r\n                  for(var i=0; i<res.rows.length; i++) {\r\n                    this.medicalhistory.push({\r\n                      rowid:res.rows.item(i).rowid,\r\n                      diagnosis:res.rows.item(i).diagnosis,\r\n                      diagnosis_details:res.rows.item(i).diagnosis_details,\r\n                      diagnosis_date:res.rows.item(i).diagnosis_date,\r\n                      notes:res.rows.item(i).notes\r\n                    })\r\n                  }\r\n                })\r\n                    .catch(e => alert('get data error' + e));\r\n                  }\r\n            \r\n              async closeModal() {\r\n                await this.modalController.dismiss();\r\n              }\r\n\r\n\r\n              async update(rowid) {\r\n                this.isSubmitted = true;\r\n                const alert = await this._alertController.create({\r\n                  header: \"Update this entry?\",\r\n                  message: \"Would you like to update this entry?\",\r\n                  buttons: [\r\n                    {\r\n                      text:\"Cancel\"\r\n                    },\r\n                    {\r\n                      text:\"Save\",\r\n                      handler: ()=> {\r\n                        this.updateSQL(rowid);\r\n            \r\n                      }\r\n                    }\r\n                  ]\r\n                });\r\n                await alert.present()\r\n              }\r\n\r\n              noSubmit(e) {\r\n                e.preventDefault();\r\n              }\r\n\r\n\r\n            async updateSQL(rowid) {\r\n              if(this.data.diagnosis != \"\") {\r\n                this._db.executeSql('UPDATE medicalhistory SET date=? WHERE rowid=?',[this.data.diagnosis, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              .catch(e => alert('update error' + e));\r\n              }\r\n              if(this.data.diagnosis_details != \"\"){\r\n                this._db.executeSql('UPDATE medicalhistory SET diagnosis_details=? WHERE rowid=?', [this.data.diagnosis_details, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              }\r\n              if(this.data.diagnosis_date != \"\"){\r\n                this._db.executeSql('UPDATE medicalhistory SET diagnosis_date=? WHERE rowid=?', [this.data.diagnosis_date, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              }\r\n              if(this.data.notes != \"\"){\r\n                this._db.executeSql('UPDATE medicalhistory SET notes=? WHERE rowid=?', [this.data.notes, rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n              }\r\n              this.closeModal();\r\n          }\r\n          \r\n}\r\n","export default \"::ng-deep .mycomponent-wider-popover {\\n  --width: 95%;\\n  --max-width: 400px;\\n}\\n\\nion-select {\\n  color: black;\\n  --placeholder-opacity: 1;\\n  max-width: 95%;\\n}\\n\\nion-input {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n\\nion-textarea {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n\\nion-datetime {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcZWRpdC1lbnRyeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSx3QkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSx3QkFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLHdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0Esd0JBQUE7QUFDRiIsImZpbGUiOiJlZGl0LWVudHJ5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubXljb21wb25lbnQtd2lkZXItcG9wb3ZlciB7XHJcbiAgLS13aWR0aDogOTUlO1xyXG4gIC0tbWF4LXdpZHRoOiA0MDBweDtcclxufVxyXG5cclxuaW9uLXNlbGVjdCB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcclxuICBtYXgtd2lkdGg6IDk1JTtcclxufVxyXG5cclxuaW9uLWlucHV0IHtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgLS1wbGFjZWhvbGRlci1vcGFjaXR5OiAxO1xyXG59XHJcblxyXG5pb24tdGV4dGFyZWEge1xyXG4gIGNvbG9yOiBibGFjaztcclxuICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbmlvbi1kYXRldGltZSB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcclxufVxyXG4iXX0= */\";"],"sourceRoot":"webpack:///"}