{"version":3,"sources":["./src/app/tab4/mood/view-entry/view-entry.page.html","./src/app/tab4/mood/view-entry/view-entry.page.scss","./src/app/tab4/mood/view-entry/view-entry-routing.module.ts","./src/app/tab4/mood/view-entry/view-entry.module.ts","./src/app/tab4/mood/view-entry/view-entry.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,+fAAgc,oeAAoe,iCAAiC,gRAAgR,SAAS,upBAAupB,eAAe,upBAAupB,SAAS,opBAAopB,cAAc,mtBAAmtB,SAAS,syBAAsyB,E;;;;;;;;;;;;ACAvtJ;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;;;;;;;;ACA3I;AACc;AAEL;AAElD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE4B;AAEvB;IAWrC,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,qFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,8DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;ACnBhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA8B;AAC9B,8DAA8D;AAC9D,4EAA4E;AAC5E,+GAA+G;AAC/G,gDAAgD;AAChD,iFAAiF;;;;AAE/B;AACU;AACD;AACK;AACF;IAOjD,aAAa,SAAb,aAAa;IAUxB,YAAoB,eAAgC,EAChC,SAAoB,EACpB,gBAAiC,EAClC,KAAe,EACf,IAAY;QAJX,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,qBAAgB,GAAhB,gBAAgB,CAAiB;QAClC,UAAK,GAAL,KAAK,CAAU;QACf,SAAI,GAAJ,IAAI,CAAQ;QAbxB,SAAI,GAAgB,EAAE,CAAC;QACvB,WAAM,GAA6B,KAAK,CAAC;QACzC,eAAU,GAAyB,IAAI,CAAC;QAI/C,cAAS,GAAY,yKAAyK;QAC9L,SAAI,GAAG,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;QASxE,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,KAAK;aACT,KAAK,EAAE;aACP,IAAI,CAAC,GAAG,EAAE;YAEP,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAEM,eAAe;QAEpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACf,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,SAAS;SACpB,CAAC;aACD,IAAI,CAAC,CAAC,EAAgB,EAAE,EAAE;YAEzB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAEK,qBAAqB;;YACzB,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;KAAA;IAEM,OAAO,CAAC,KAAK;QAClB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,kCAAkC,EAAE,CAAC,KAAK,CAAC,CAAC;aAC/D,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBACb,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;oBAC5B,IAAI,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;oBAC1B,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;oBAC5B,WAAW,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;oBACxC,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;oBAC5B,UAAU,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;oBACtC,KAAK,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;iBAC7B,CAAC;aACH;QACH,CAAC,CAAC;aACG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAIC,UAAU;;YACd,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC;KAAA;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,gCAAgC,EAAE,CAAC,KAAK,CAAC,CAAC;aAC7D,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAEK,UAAU,CAAC,KAAK;;YACpB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;gBAC/C,MAAM,EAAE,oBAAoB;gBAC5B,OAAO,EAAE,sCAAsC;gBAC/C,OAAO,EAAE;oBACP;wBACE,IAAI,EAAC,QAAQ;qBACd;oBACD;wBACE,IAAI,EAAC,QAAQ;wBACb,OAAO,EAAE,GAAE,EAAE;4BACX,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBACzB,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QAExB,CAAC;KAAA;IAEK,SAAS,CAAC,KAAK;;YACnB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,SAAS,EAAE,yEAAa;gBACxB,cAAc,EAAE,EAAE,OAAO,EAAE,KAAK,EAAC;aAClC,CAAC,CAAC;YACH,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,GAAE,EAAE;gBAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;YACH,OAAO,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;KAAA;CAEF;;YA1HO,8DAAe;YAA1B,wDAAS;YACT,8DAAe;YAAE,uDAAQ;YACzB,+DAAM;;AAQF,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,kFAAqC;;KAEtC,CAAC;GACW,aAAa,CAgHb;AAhHa","file":"default~mood-mood-module~view-entry-view-entry-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>View your Mood entry!</ion-title>\\r\\n    <ion-button\\r\\n      color=\\\"dark\\\"\\r\\n      fill=\\\"clear\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      size=\\\"small\\\"\\r\\n      (click)=\\\"closeModal()\\\"\\r\\n      ><ion-icon size=\\\"large\\\" name=\\\"arrow-back-outline\\\"></ion-icon\\r\\n    ></ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <ion-list *ngFor=\\\"let m of mood; let i = index\\\" class=\\\"list\\\">\\r\\n    <ion-card>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-card-title>Mood Info</ion-card-title>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Date</ion-label>\\r\\n              <ion-icon class=\\\"red\\\" slot=\\\"start\\\" name=\\\"calendar\\\"></ion-icon>\\r\\n              <p>{{m.date | date: \\\"dd MMMM YYYY\\\"}}</p>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Happy</ion-label>\\r\\n              <ion-range\\r\\n                min=\\\"20\\\"\\r\\n                max=\\\"80\\\"\\r\\n                step=\\\"2\\\"\\r\\n                value=\\\"{{m.happy}}\\\"\\r\\n                name=\\\"happy\\\"\\r\\n                disabled=\\\"true\\\"\\r\\n              >\\r\\n                <ion-icon\\r\\n                  class=\\\"orange\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"thumbs-down\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-icon class=\\\"orange\\\" slot=\\\"end\\\" name=\\\"thumbs-up\\\"></ion-icon>\\r\\n              </ion-range>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Independent</ion-label>\\r\\n              <ion-range\\r\\n                min=\\\"20\\\"\\r\\n                max=\\\"80\\\"\\r\\n                step=\\\"2\\\"\\r\\n                value=\\\"{{m.independent}}\\\"\\r\\n                name=\\\"independent\\\"\\r\\n                disabled=\\\"true\\\"\\r\\n              >\\r\\n                <ion-icon\\r\\n                  class=\\\"yellow\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"thumbs-down\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-icon class=\\\"yellow\\\" slot=\\\"end\\\" name=\\\"thumbs-up\\\"></ion-icon>\\r\\n              </ion-range>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Tired</ion-label>\\r\\n              <ion-range\\r\\n                min=\\\"20\\\"\\r\\n                max=\\\"80\\\"\\r\\n                step=\\\"2\\\"\\r\\n                value=\\\"{{m.tired}}\\\"\\r\\n                name=\\\"tired\\\"\\r\\n                disabled=\\\"true\\\"\\r\\n              >\\r\\n                <ion-icon\\r\\n                  class=\\\"green\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"thumbs-down\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-icon class=\\\"green\\\" slot=\\\"end\\\" name=\\\"thumbs-up\\\"></ion-icon>\\r\\n              </ion-range>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Productive</ion-label>\\r\\n              <ion-range\\r\\n                min=\\\"20\\\"\\r\\n                max=\\\"80\\\"\\r\\n                step=\\\"2\\\"\\r\\n                value=\\\"{{m.productive}}\\\"\\r\\n                name=\\\"productive\\\"\\r\\n                disabled=\\\"true\\\"\\r\\n              >\\r\\n                <ion-icon\\r\\n                  class=\\\"teal\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"thumbs-down\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-icon class=\\\"teal\\\" slot=\\\"end\\\" name=\\\"thumbs-up\\\"></ion-icon>\\r\\n              </ion-range>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n              <ion-label color=\\\"medium\\\" position=\\\"stacked\\\">Notes</ion-label>\\r\\n              <ion-icon\\r\\n                class=\\\"lightblue\\\"\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"pencil-outline\\\"\\r\\n              ></ion-icon>\\r\\n              <p>{{m.notes}}</p>\\r\\n            </ion-item>\\r\\n            <ion-button\\r\\n              color=\\\"danger\\\"\\r\\n              fill=\\\"outline\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              style=\\\"float: right\\\"\\r\\n              (click)=\\\"removeData(m.rowid)\\\"\\r\\n              ><ion-icon\\r\\n                size=\\\"large\\\"\\r\\n                color=\\\"danger\\\"\\r\\n                name=\\\"trash-outline\\\"\\r\\n              ></ion-icon\\r\\n            ></ion-button>\\r\\n            <!-- <ion-button color=\\\"light\\\" style=\\\"float: right\\\" (click)=\\\"editModal(m.rowid)\\\">\\r\\n                    <ion-icon size=\\\"large\\\" color=\\\"success\\\" slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>Edit</ion-button> -->\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2aWV3LWVudHJ5LnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewEntryPage } from './view-entry.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewEntryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ViewEntryPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ViewEntryPageRoutingModule } from './view-entry-routing.module';\r\n\r\nimport { ViewEntryPage } from './view-entry.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ViewEntryPageRoutingModule\r\n  ],\r\n  declarations: [ViewEntryPage]\r\n})\r\nexport class ViewEntryPageModule {}\r\n","//  This file is adapted from:\r\n// https://edupala.com/ionic-template-driven-form-validation/ \r\n// https://www.freakyjolly.com/ionic-sqlite-tutorial-using-crud-operations/ \r\n// https://www.djamware.com/post/59c53a1280aca768e4d2b143/ionic-3-angular-4-and-sqlite-crud-offline-mobile-app \r\n// https://devdactic.com/ionic-4-sqlite-queries/\r\n// https://www.positronx.io/ionic-angular-modals-tutorial-passing-receiving-data/\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavParams, ModalController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\r\nimport {EditEntryPage } from '..//edit-entry/edit-entry.page';\r\n\r\n@Component({\r\n  selector: 'app-view-entry',\r\n  templateUrl: './view-entry.page.html',\r\n  styleUrls: ['./view-entry.page.scss'],\r\n})\r\nexport class ViewEntryPage {\r\n  public mood : Array<any> = [];\r\n  public isData          : boolean        = false;\r\n  public storedData      : any            = null;\r\n  private _db   : any;\r\n\r\n  rowid: any;\r\n  MoodTable : string = 'CREATE TABLE IF NOT EXISTS mood (rowid INTEGER PRIMARY KEY AUTOINCREMENT, date TEXT, happy INTEGER, independent INTEGER, tired INTEGER, productive INTEGER, notes TEXT)'\r\n  data = {date: \"\", happy: \"\", independent: \"\", tired: \"\", productive: \"\", notes: \"\"};\r\n\r\n  constructor(private modalController: ModalController,\r\n              private navParams: NavParams,\r\n              private _alertController: AlertController, \r\n              public _plat: Platform, \r\n              public _sql: SQLite\r\n            ) \r\n            {\r\n              this.rowid=navParams.get('rowid')\r\n              this.mood = [];\r\n              this._plat\r\n              .ready()\r\n              .then(() =>           \r\n                {\r\n                  this._createDatabase();\r\n                })\r\n                .catch(e => alert('create database error' + e));\r\n              }\r\n            \r\n              public _createDatabase()\r\n              {\r\n                this._sql.create({\r\n                  name: \"database.db\",\r\n                  location: 'default'\r\n                })\r\n                .then((db: SQLiteObject) =>\r\n                {\r\n                  this._db = db;\r\n                  this._createDatabaseTables();\r\n                })\r\n                .catch(e => alert('create tables error' + e));\r\n              }\r\n              \r\n              async _createDatabaseTables() {\r\n                await this._db.executeSql(this.MoodTable, []);\r\n                this.getData(this.rowid);\r\n              }\r\n                \r\n              public getData(rowid) {\r\n                this._db.executeSql('SELECT * FROM mood WHERE rowid=?', [rowid])\r\n                .then(res => {\r\n                  this.mood = [];\r\n                  for(var i=0; i<res.rows.length; i++) {\r\n                    this.mood.push({\r\n                      rowid:res.rows.item(i).rowid,\r\n                      date:res.rows.item(i).date,\r\n                      happy:res.rows.item(i).happy,\r\n                      independent:res.rows.item(i).independent,\r\n                      tired:res.rows.item(i).tired,\r\n                      productive:res.rows.item(i).productive,\r\n                      notes:res.rows.item(i).notes\r\n                    })\r\n                  }\r\n                })\r\n                    .catch(e => alert('get data error' + e));\r\n                  }\r\n                \r\n                 \r\n            \r\n              async closeModal() {\r\n                await this.modalController.dismiss();\r\n              }\r\n\r\n              deleteData(rowid) {\r\n                this._db.executeSql('DELETE FROM mood WHERE rowid=?', [rowid])\r\n                .then(res => {\r\n                  this.closeModal();\r\n                })\r\n                .catch(e => alert('delete data error' + e));\r\n              }\r\n          \r\n              async removeData(rowid) {\r\n                const alert = await this._alertController.create({\r\n                  header: \"Delete this entry?\",\r\n                  message: \"Would you like to delete this entry?\",\r\n                  buttons: [\r\n                    {\r\n                      text:\"Cancel\"\r\n                    },\r\n                    {\r\n                      text:\"Delete\",\r\n                      handler: ()=> {\r\n                        this.deleteData(rowid);\r\n                      }\r\n                    }\r\n                  ]\r\n                });\r\n            \r\n                await alert.present();\r\n            \r\n              }\r\n\r\n              async editModal(rowid) {\r\n                const modal = await this.modalController.create({\r\n                  component: EditEntryPage,\r\n                  componentProps: { 'rowid': rowid}\r\n                });\r\n                modal.onDidDismiss().then(()=>{\r\n                  this.getData(rowid);\r\n                });\r\n                return await modal.present();\r\n              }\r\n              \r\n            }\r\n\r\n"],"sourceRoot":"webpack:///"}