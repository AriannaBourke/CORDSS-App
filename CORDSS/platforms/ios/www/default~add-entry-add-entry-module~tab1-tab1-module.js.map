{"version":3,"sources":["./src/app/tab1/add-entry/add-entry.module.ts","./src/app/tab1/add-entry/add-entry.page.scss","./src/app/tab1/add-entry/add-entry.page.html","./src/app/tab1/add-entry/add-entry-routing.module.ts","./src/app/tab1/add-entry/add-entry.page.ts"],"names":[],"mappings":"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","file":"default~add-entry-add-entry-module~tab1-tab1-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddEntryPageRoutingModule } from './add-entry-routing.module';\r\n\r\nimport { AddEntryPage } from './add-entry.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AddEntryPageRoutingModule\r\n  ],\r\n  declarations: [AddEntryPage]\r\n})\r\nexport class AddEntryPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZW50cnkucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Add info about yourself!</ion-title>\\r\\n    <ion-button\\r\\n      color=\\\"dark\\\"\\r\\n      fill=\\\"clear\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      size=\\\"small\\\"\\r\\n      (click)=\\\"closeModal()\\\"\\r\\n      ><ion-icon size=\\\"large\\\" name=\\\"arrow-back-outline\\\"></ion-icon\\r\\n    ></ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"submitData(form)\\\">\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Basic Info </ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n              <ion-icon\\r\\n                class=\\\"red\\\"\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"person\\\"\\r\\n                size=\\\"medium\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                placeholder=\\\"Name (*required)\\\"\\r\\n                name=\\\"name\\\"\\r\\n                required\\r\\n                [(ngModel)]=\\\"data.name\\\"\\r\\n                #nameCtrl=\\\"ngModel\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"!nameCtrl.valid && nameCtrl.touched\\\">\\r\\n              <ion-text color=\\\"danger\\\">*Name is required</ion-text>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Date of Birth</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"gift\\\"\\r\\n                class=\\\"orange\\\"\\r\\n                size=\\\"medium\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-datetime\\r\\n                displayFormat=\\\"DD MMMM YYYY\\\"\\r\\n                placeholder=\\\"Date of Birth\\\"\\r\\n                name=\\\"birthday\\\"\\r\\n                [(ngModel)]=\\\"data.birthday\\\"\\r\\n              ></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">A little bit about me</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"information-circle\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"yellow\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-textarea\\r\\n                rows=\\\"2\\\"\\r\\n                placeholder=\\\"A little bit about me\\\"\\r\\n                name=\\\"about\\\"\\r\\n                [(ngModel)]=\\\"data.about\\\"\\r\\n              ></ion-textarea>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Private Info</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Email</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                class=\\\"green\\\"\\r\\n                name=\\\"mail\\\"\\r\\n                size=\\\"medium\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                placeholder=\\\"Email\\\"\\r\\n                name=\\\"email\\\"\\r\\n                [(ngModel)]=\\\"data.email\\\"\\r\\n                type=\\\"email\\\"\\r\\n                #emailCtrl=\\\"ngModel\\\"\\r\\n                email\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\">\\r\\n              <ion-text color=\\\"danger\\\">Email is not valid</ion-text>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"call\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"teal\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                placeholder=\\\"Phone Number\\\"\\r\\n                name=\\\"phone\\\"\\r\\n                [(ngModel)]=\\\"data.phone\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Address</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"home\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"lightblue\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-textarea\\r\\n                placeholder=\\\"Address\\\"\\r\\n                name=\\\"address\\\"\\r\\n                [(ngModel)]=\\\"data.address\\\"\\r\\n              ></ion-textarea>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item lines=\\\"none\\\">\\r\\n              <ion-label position=\\\"stacked\\\">NHS Number</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"newspaper\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"blue\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                placeholder=\\\"NHS Number\\\"\\r\\n                name=\\\"nhs_number\\\"\\r\\n                [(ngModel)]=\\\"data.nhs_number\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-card>\\r\\n      <ion-card-header>\\r\\n        <ion-card-title>Emergency Contacts</ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label color=\\\"primary\\\"> Emergency Contact 1 </ion-label>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"person\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"darkblue\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                [(ngModel)]=\\\"data.emergency_1_name\\\"\\r\\n                name=\\\"emergency_1_name\\\"\\r\\n                placeholder=\\\"Name\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"call\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"purple\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                [(ngModel)]=\\\"data.emergency_1_number\\\"\\r\\n                name=\\\"emergency_1_number\\\"\\r\\n                placeholder=\\\"Phone Number\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label color=\\\"primary\\\"> Emergency Contact 2 </ion-label>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"person\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"magenta\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                [(ngModel)]=\\\"data.emergency_2_name\\\"\\r\\n                name=\\\"emergency_2_name\\\"\\r\\n                placeholder=\\\"Name\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"call\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"pink\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                [(ngModel)]=\\\"data.emergency_2_number\\\"\\r\\n                name=\\\"emergency_2_number\\\"\\r\\n                placeholder=\\\"Phone Number\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label color=\\\"primary\\\"> Emergency Contact 3 </ion-label>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"person\\\"\\r\\n                class=\\\"brightpink\\\"\\r\\n                size=\\\"medium\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                [(ngModel)]=\\\"data.emergency_3_name\\\"\\r\\n                name=\\\"emergency_3_name\\\"\\r\\n                placeholder=\\\"Name\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n              <ion-icon\\r\\n                slot=\\\"start\\\"\\r\\n                name=\\\"call\\\"\\r\\n                size=\\\"medium\\\"\\r\\n                class=\\\"redpink\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-input\\r\\n                [(ngModel)]=\\\"data.emergency_3_number\\\"\\r\\n                name=\\\"emergency_3_number\\\"\\r\\n                placeholder=\\\"Phone Number\\\"\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <div class=\\\"ion-margin-vertical ion-text-right\\\">\\r\\n          <ion-button\\r\\n            type=\\\"button\\\"\\r\\n            fill=\\\"outline\\\"\\r\\n            shape=\\\"round\\\"\\r\\n            color=\\\"danger\\\"\\r\\n            (click)=\\\"form.reset()\\\"\\r\\n            >Clear</ion-button\\r\\n          >\\r\\n          <ion-button\\r\\n            type=\\\"button\\\"\\r\\n            shape=\\\"round\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            value=\\\"submit\\\"\\r\\n            id=\\\"submit\\\"\\r\\n            color=\\\"success\\\"\\r\\n            [disabled]=\\\"!form.valid\\\"\\r\\n            >Submit</ion-button\\r\\n          >\\r\\n        </div>\\r\\n      </ion-grid>\\r\\n    </ion-card>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddEntryPage } from './add-entry.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddEntryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddEntryPageRoutingModule {}\r\n","//  This file is adapted from: Database - \r\n// https://edupala.com/ionic-template-driven-form-validation/ \r\n// https://www.freakyjolly.com/ionic-sqlite-tutorial-using-crud-operations/ \r\n// https://www.djamware.com/post/59c53a1280aca768e4d2b143/ionic-3-angular-4-and-sqlite-crud-offline-mobile-app \r\n// https://devdactic.com/ionic-4-sqlite-queries/\r\n// https://www.positronx.io/ionic-angular-modals-tutorial-passing-receiving-data/\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-entry',\r\n  templateUrl: './add-entry.page.html',\r\n  styleUrls: ['./add-entry.page.scss'],\r\n})\r\nexport class AddEntryPage {\r\n  public aboutme : Array<any> = [];\r\n  public isData          : boolean        = false;\r\n  public storedData      : any            = null;\r\n  private _db   : any;\r\n  data: any;\r\n  isSubmitted = false;\r\n\r\n  AboutMeTable : string = 'CREATE TABLE IF NOT EXISTS aboutme (rowid INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, birthday TEXT, about TEXT, email TEXT, phone TEXT, address TEXT, nhs_number TEXT, emergency_1_name TEXT, emergency_1_number TEXT, emergency_2_name TEXT, emergency_2_number TEXT, emergency_3_name TEXT, emergency_3_number TEXT)'\r\n\r\n  constructor(private modalController: ModalController,\r\n              private navParams: NavParams,\r\n              private _alertController: AlertController,\r\n              public _plat: Platform,\r\n              public _sql: SQLite\r\n            )\r\n{\r\n  this.data = {name: \"\", birthday: \"\", about: \"\", email: \"\", phone: \"\", address:\"\", nhs_number: \"\", emergency_1_name:\"\", emergency_1_number:\"\", emergency_2_name:\"\", emergency_2_number:\"\", emergency_3_name:\"\", emergency_3_number:\"\"};\r\n\r\n  this.aboutme = [];\r\n  this._plat\r\n  .ready()\r\n  .then(() =>\r\n\r\n    {\r\n      this._createDatabase();\r\n    })\r\n    .catch(e => alert('create database error' + e));\r\n  }\r\n\r\n  public _createDatabase()\r\n  {\r\n    this._sql.create({\r\n      name: \"database.db\",\r\n      location: 'default'\r\n    })\r\n    .then((db: SQLiteObject) =>\r\n    {\r\n      this._db = db;\r\n      this._createDatabaseTables();\r\n    })\r\n    .catch(e => alert('create tables error' + e));\r\n  }\r\n\r\n  async _createDatabaseTables() {\r\n    await this._db.executeSql(this.AboutMeTable, []);\r\n    this.getData()\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n        this.getData();\r\n      }\r\n\r\n      ionViewWillEnter() {\r\n        this.getData();\r\n      }\r\n\r\n      public getData() {\r\n        this._db.executeSql('SELECT * FROM aboutme', <any>[])\r\n        .then(res => {\r\n          this.aboutme = [];\r\n          for(var i=0; i<res.rows.length; i++) {\r\n            this.aboutme.push({\r\n              rowid:res.rows.item(i).rowid,\r\n              name:res.rows.item(i).name,\r\n              birthday:res.rows.item(i).birthday,\r\n              about:res.rows.item(i).about,\r\n              email:res.rows.item(i).email,\r\n              phone:res.rows.item(i).phone,\r\n              address:res.rows.item(i).address,\r\n              nhs_number:res.rows.item(i).nhs_number,\r\n              emergency_1_name:res.rows.item(i).emergency_1_name,\r\n              emergency_1_number:res.rows.item(i).emergency_1_number,\r\n              emergency_2_name:res.rows.item(i).emergency_2_name,\r\n              emergency_2_number:res.rows.item(i).emergency_2_number,\r\n              emergency_3_name:res.rows.item(i).emergency_3_name,\r\n              emergency_3_number:res.rows.item(i).emergency_3_number\r\n            })\r\n          }\r\n        })\r\n            .catch(e => alert('get data error' + e));\r\n          }\r\n\r\n  public saveData() {\r\n    this._db.executeSql('INSERT INTO aboutme VALUES(NULL,?,?,?,?,?,?,?,?,?,?,?,?,?)', [this.data.name, this.data.birthday, this.data.about, this.data.email, this.data.phone,this.data.address,this.data.nhs_number, this.data.emergency_1_name, this.data.emergency_1_number, this.data.emergency_2_name, this.data.emergency_2_number, this.data.emergency_3_name, this.data.emergency_3_number])\r\n    .then(res => {\r\n        this.closeModal()\r\n      })\r\n      .catch(e => alert(\"save data error\" + e));\r\n    }\r\n\r\n    async submitData(myForm: NgForm) {\r\n      const alert = await this._alertController.create({\r\n        header: \"Save this entry?\",\r\n        message: \"Would you like to save this entry into About Me?\",\r\n        buttons: [\r\n          {\r\n            text:\"Cancel\"\r\n          },\r\n          {\r\n            text:\"save\",\r\n            handler: ()=> {\r\n              this.saveData();\r\n\r\n            }\r\n          }\r\n        ]\r\n      });\r\n\r\n      await alert.present();\r\n    }\r\n\r\n    noSubmit(e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n  async closeModal() {\r\n    await this.modalController.dismiss();\r\n    this.getData();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}