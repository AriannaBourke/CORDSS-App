{"version":3,"sources":["./src/app/tab1/edit-entry/edit-entry.page.ts","./src/app/tab1/edit-entry/edit-entry.page.html","./src/app/tab1/edit-entry/edit-entry.page.scss"],"names":[],"mappings":"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","file":"default~edit-entry-edit-entry-module~tab1-tab1-module~view-entry-view-entry-module.js","sourcesContent":["//  This file is adapted from: Database - \r\n// https://edupala.com/ionic-template-driven-form-validation/ \r\n// https://www.freakyjolly.com/ionic-sqlite-tutorial-using-crud-operations/ \r\n// https://www.djamware.com/post/59c53a1280aca768e4d2b143/ionic-3-angular-4-and-sqlite-crud-offline-mobile-app \r\n// https://devdactic.com/ionic-4-sqlite-queries/\r\n// https://www.positronx.io/ionic-angular-modals-tutorial-passing-receiving-data/\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavParams, ModalController } from '@ionic/angular';\r\nimport { AlertController, Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\r\nimport { ReactiveFormsModule, FormControl, FormGroup, FormBuilder } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-edit-entry',\r\n  templateUrl: './edit-entry.page.html',\r\n  styleUrls: ['./edit-entry.page.scss'],\r\n})\r\nexport class EditEntryPage {\r\n  public aboutme : Array<any> = [];\r\n  public isData          : boolean        = false;\r\n  public storedData      : any            = null;\r\n  private _db   : any;\r\n\r\n\r\n  rowid: any;\r\n  AboutMeTable : string = 'CREATE TABLE IF NOT EXISTS aboutme (rowid INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, birthday TEXT, about TEXT, email TEXT, phone TEXT, address TEXT, nhs_number TEXT, emergency_1_name TEXT, emergency_1_number TEXT, emergency_2_name TEXT, emergency_2_number TEXT, emergency_3_name TEXT, emergency_3_number TEXT)'\r\n  data = {name: \"\", birthday: \"\", about: \"\", email: \"\", phone: \"\", address:\"\", nhs_number: \"\", emergency_1_name:\"\", emergency_1_number:\"\", emergency_2_name:\"\", emergency_2_number:\"\", emergency_3_name:\"\", emergency_3_number:\"\"};\r\n\r\n  constructor(private modalController: ModalController,\r\n              private navParams: NavParams,\r\n              private _alertController: AlertController,\r\n              public _plat: Platform,\r\n              public _sql: SQLite,\r\n            )\r\n            {\r\n              this.rowid=navParams.get('rowid');\r\n              this.aboutme = [];\r\n              this._plat\r\n              .ready()\r\n              .then(() =>\r\n\r\n                {\r\n                  this._createDatabase();\r\n                })\r\n                .catch(e => alert('create database error' + e));\r\n              }\r\n\r\n              public _createDatabase()\r\n              {\r\n                this._sql.create({\r\n                  name: \"database.db\",\r\n                  location: 'default'\r\n                })\r\n                .then((db: SQLiteObject) =>\r\n                {\r\n                  this._db = db;\r\n                  this._createDatabaseTables();\r\n                })\r\n                .catch(e => alert('create tables error' + e));\r\n              }\r\n\r\n              async _createDatabaseTables() {\r\n                await this._db.executeSql(this.AboutMeTable, []);\r\n                this.getData(this.rowid);\r\n              }\r\n\r\n\r\n              public getData(rowid) {\r\n                this._db.executeSql('SELECT * FROM aboutme WHERE rowid=?', [rowid])\r\n                .then(res => {\r\n                  this.aboutme = [];\r\n                  for(var i=0; i<res.rows.length; i++) {\r\n                    this.aboutme.push({\r\n                      rowid:res.rows.item(i).rowid,\r\n                      name:res.rows.item(i).name,\r\n                      birthday:res.rows.item(i).birthday,\r\n                      about:res.rows.item(i).about,\r\n                      email:res.rows.item(i).email,\r\n                      phone:res.rows.item(i).phone,\r\n                      address:res.rows.item(i).address,\r\n                      nhs_number:res.rows.item(i).nhs_number,\r\n                      emergency_1_name:res.rows.item(i).emergency_1_name,\r\n                      emergency_1_number:res.rows.item(i).emergency_1_number,\r\n                      emergency_2_name:res.rows.item(i).emergency_2_name,\r\n                      emergency_2_number:res.rows.item(i).emergency_2_number,\r\n                      emergency_3_name:res.rows.item(i).emergency_3_name,\r\n                      emergency_3_number:res.rows.item(i).emergency_3_number\r\n                    })\r\n                  }\r\n                })\r\n                    .catch(e => alert('get data error' + e));\r\n                  }\r\n\r\n\r\n              async closeModal() {\r\n                await this.modalController.dismiss();\r\n              }\r\n\r\n\r\n              async update(rowid) {\r\n                const alert = await this._alertController.create({\r\n                  header: \"Update About Me?\",\r\n                  message: \"Would you like to update your About Me page?\",\r\n                  buttons: [\r\n                    {\r\n                      text:\"Cancel\"\r\n                    },\r\n                    {\r\n                      text:\"Save\",\r\n                      handler: ()=> {\r\n                        this.updateSQL(rowid);\r\n\r\n                      }\r\n                    }\r\n                  ]\r\n                });\r\n                await alert.present()\r\n              }\r\n\r\n              async updateSQL(rowid) {\r\n                if(this.data.name != \"\") {\r\n                  this._db.executeSql('UPDATE aboutme SET name=? WHERE rowid=?',[this.data.name, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                .catch(e => alert('update error' + e));\r\n                }\r\n                if(this.data.birthday != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET birthday=? WHERE rowid=?', [this.data.birthday, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.about != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET about=? WHERE rowid=?', [this.data.about, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.email != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET email=? WHERE rowid=?', [this.data.email, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.phone != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET phone=? WHERE rowid=?', [this.data.phone, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.address != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET address=? WHERE rowid=?', [this.data.address, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.nhs_number != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET nhs_number=? WHERE rowid=?', [this.data.nhs_number, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.emergency_1_name != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET emergency_1_name=? WHERE rowid=?', [this.data.emergency_1_name, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.emergency_1_number != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET emergency_1_number=? WHERE rowid=?', [this.data.emergency_1_number, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.emergency_2_name != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET emergency_2_name=? WHERE rowid=?', [this.data.emergency_2_name, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.emergency_2_number != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET emergency_2_number=? WHERE rowid=?', [this.data.emergency_2_number, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.emergency_3_name != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET emergency_3_name=? WHERE rowid=?', [this.data.emergency_3_name, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                if(this.data.emergency_3_number != \"\"){\r\n                  this._db.executeSql('UPDATE aboutme SET emergency_3_number=? WHERE rowid=?', [this.data.emergency_3_number, rowid])\r\n                  .then(res => {\r\n                    this.closeModal();\r\n                  })\r\n                }\r\n                this.closeModal();\r\n            }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Edit your information!</ion-title>\\r\\n    <ion-button\\r\\n      color=\\\"dark\\\"\\r\\n      fill=\\\"clear\\\"\\r\\n      slot=\\\"start\\\"\\r\\n      size=\\\"small\\\"\\r\\n      (click)=\\\"closeModal()\\\"\\r\\n      ><ion-icon size=\\\"large\\\" name=\\\"arrow-back-outline\\\"></ion-icon\\r\\n    ></ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <ion-list *ngFor=\\\"let about of aboutme; let i=index\\\" class=\\\"list\\\">\\r\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"update(rowid)\\\">\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title>Basic Info </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n                <ion-icon\\r\\n                  class=\\\"red\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"person\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  placeholder=\\\"{{about.name}}\\\"\\r\\n                  name=\\\"name\\\"\\r\\n                  required\\r\\n                  [(ngModel)]=\\\"data.name\\\"\\r\\n                  #nameCtrl=\\\"ngModel\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Date of Birth</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"gift\\\"\\r\\n                  class=\\\"orange\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-datetime\\r\\n                  displayFormat=\\\"DD MMMM YYYY\\\"\\r\\n                  placeholder=\\\"{{about.birthday | date: 'dd MMMM YYYY'}}\\\"\\r\\n                  name=\\\"birthday\\\"\\r\\n                  [(ngModel)]=\\\"data.birthday\\\"\\r\\n                ></ion-datetime>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label position=\\\"stacked\\\">A little bit about me</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"information-circle\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"yellow\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-textarea\\r\\n                  rows=\\\"2\\\"\\r\\n                  placeholder=\\\"{{about.about}}\\\"\\r\\n                  name=\\\"about\\\"\\r\\n                  [(ngModel)]=\\\"data.about\\\"\\r\\n                ></ion-textarea>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-card>\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title>Private Info</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Email</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  class=\\\"green\\\"\\r\\n                  name=\\\"mail\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                placeholder=\\\"{{about.email}}\\\"\\r\\n                name=\\\"email\\\"\\r\\n                type=\\\"email\\\"\\r\\n                [(ngModel)]=\\\"data.email\\\"\\r\\n                #emailCtrl=\\\"ngModel\\\"\\r\\n                email\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\">\\r\\n              <ion-text color=\\\"danger\\\">Email is not valid</ion-text>\\r\\n            </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"call\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"teal\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  placeholder=\\\"{{about.phone}}\\\"\\r\\n                  name=\\\"phone\\\"\\r\\n                  [(ngModel)]=\\\"data.phone\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Address</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"home\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"lightblue\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-textarea\\r\\n                  placeholder=\\\"{{about.address}}\\\"\\r\\n                  name=\\\"address\\\"\\r\\n                  [(ngModel)]=\\\"data.address\\\"\\r\\n                ></ion-textarea>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                <ion-label position=\\\"stacked\\\">NHS Number</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"newspaper\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"blue\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  placeholder=\\\"{{about.nhs_number}}\\\"\\r\\n                  name=\\\"nhs_number\\\"\\r\\n                  [(ngModel)]=\\\"data.nhs_number\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-card>\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title>Emergency Contacts</ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label color=\\\"primary\\\"> Emergency Contact 1 </ion-label>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"person\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"darkblue\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"data.emergency_1_name\\\"\\r\\n                  name=\\\"emergency_1_name\\\"\\r\\n                  placeholder=\\\"{{about.emergency_1_name}}\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"call\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"purple\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"data.emergency_1_number\\\"\\r\\n                  name=\\\"emergency_1_number\\\"\\r\\n                  placeholder=\\\"{{about.emergency_1_number}}\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label color=\\\"primary\\\"> Emergency Contact 2 </ion-label>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"person\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"magenta\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"data.emergency_2_name\\\"\\r\\n                  name=\\\"emergency_2_name\\\"\\r\\n                  placeholder=\\\"{{about.emergency_2_name}}\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"call\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"pink\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"data.emergency_2_number\\\"\\r\\n                  name=\\\"emergency_2_number\\\"\\r\\n                  placeholder=\\\"{{about.emergency_2_number}}\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label color=\\\"primary\\\"> Emergency Contact 3 </ion-label>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Name</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"person\\\"\\r\\n                  class=\\\"brightpink\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"data.emergency_3_name\\\"\\r\\n                  name=\\\"emergency_3_name\\\"\\r\\n                  placeholder=\\\"{{about.emergency_3_name}}\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Phone Number</ion-label>\\r\\n                <ion-icon\\r\\n                  slot=\\\"start\\\"\\r\\n                  name=\\\"call\\\"\\r\\n                  size=\\\"medium\\\"\\r\\n                  class=\\\"redpink\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  [(ngModel)]=\\\"data.emergency_3_number\\\"\\r\\n                  name=\\\"emergency_3_number\\\"\\r\\n                  placeholder=\\\"{{about.emergency_3_number}}\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <div class=\\\"ion-margin-vertical ion-text-right\\\">\\r\\n            <ion-button\\r\\n              type=\\\"button\\\"\\r\\n              fill=\\\"outline\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              color=\\\"danger\\\"\\r\\n              (click)=\\\"form.reset()\\\"\\r\\n              >Clear</ion-button\\r\\n            >\\r\\n            <ion-button\\r\\n              type=\\\"button\\\"\\r\\n              shape=\\\"round\\\"\\r\\n              type=\\\"submit\\\"\\r\\n              value=\\\"submit\\\"\\r\\n              id=\\\"submit\\\"\\r\\n              color=\\\"success\\\"\\r\\n              >Update</ion-button\\r\\n            >\\r\\n          </div>\\r\\n        </ion-grid>\\r\\n      </ion-card>\\r\\n    </form>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\";","export default \"ion-select {\\n  color: black;\\n  --placeholder-opacity: 1;\\n  max-width: 95%;\\n}\\n\\nion-input {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n\\nion-textarea {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n\\nion-datetime {\\n  color: black;\\n  --placeholder-opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxlZGl0LWVudHJ5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSx3QkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFRTtFQUNFLFlBQUE7RUFDQSx3QkFBQTtBQUNKOztBQUVFO0VBQ0UsWUFBQTtFQUNBLHdCQUFBO0FBQ0o7O0FBRUU7RUFDRSxZQUFBO0VBQ0Esd0JBQUE7QUFDSiIsImZpbGUiOiJlZGl0LWVudHJ5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1zZWxlY3Qge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgLS1wbGFjZWhvbGRlci1vcGFjaXR5OiAxO1xyXG4gICAgbWF4LXdpZHRoOiA5NSU7XHJcbiAgfVxyXG4gIFxyXG4gIGlvbi1pbnB1dCB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIGlvbi10ZXh0YXJlYSB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIGlvbi1kYXRldGltZSB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAtLXBsYWNlaG9sZGVyLW9wYWNpdHk6IDE7XHJcbiAgfVxyXG4iXX0= */\";"],"sourceRoot":"webpack:///"}